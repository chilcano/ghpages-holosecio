<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sdlc on Holistic Security</title>
    <link>https://holisticsecurity.io/categories/sdlc/</link>
    <description>Recent content in sdlc on Holistic Security</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 Mar 2020 10:00:00 +0000</lastBuildDate><atom:link href="https://holisticsecurity.io/categories/sdlc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>DevOps is to SDLC as MLOps is to Machine Learning Applications</title>
      <link>https://holisticsecurity.io/2020/03/10/devops-is-to-sdlc-as-mlops-is-to-machine-learning-apps/</link>
      <pubDate>Tue, 10 Mar 2020 10:00:00 +0000</pubDate>
      
      <guid>https://holisticsecurity.io/2020/03/10/devops-is-to-sdlc-as-mlops-is-to-machine-learning-apps/</guid>
      <description>&lt;p&gt;If you have read the previous post about &lt;a href=&#34;https://holisticsecurity.io/2020/02/10/security-along-the-container-based-sdlc&#34;&gt;Security along the Container-based SDLC&lt;/a&gt;, then you have noted that DevOps and Security practices should be applied and embeded along &lt;a href=&#34;https://en.wikipedia.org/wiki/Systems_development_life_cycle&#34;&gt;SDLC&lt;/a&gt;. Before we had to understand the entire software production process and sub-processes in order to apply these DevOps and Security practices. Well, in this post I&amp;rsquo;ll explain how to apply DevOps practices along Machine Learning Software Applications Development Life Cycle (ML-SDLC) and I&amp;rsquo;ll share a set of tools focusing to implement MLOps.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://holisticsecurity.io/assets/blog20200309/mlops-sdlc-devsecops-comparison.png&#34;&gt;&lt;img src=&#34;https://holisticsecurity.io/assets/blog20200309/mlops-sdlc-devsecops-comparison.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;&lt;!-- raw HTML omitted --&gt;Data Science (&amp;amp; ML) Life Cycle&lt;!-- raw HTML omitted --&gt;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Security along the Container-based SDLC</title>
      <link>https://holisticsecurity.io/2020/02/10/security-along-the-container-based-sdlc/</link>
      <pubDate>Mon, 10 Feb 2020 10:00:00 +0000</pubDate>
      
      <guid>https://holisticsecurity.io/2020/02/10/security-along-the-container-based-sdlc/</guid>
      <description>&lt;p&gt;Nowadays, containers are becoming the standard deployment unit of software, and that in the Cloud-based Application Security world means 2 things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The Software Applications are &lt;strong&gt;distributed&lt;/strong&gt; into containers.&lt;/li&gt;
&lt;li&gt;The minimum unit of &lt;strong&gt;deployment&lt;/strong&gt; and &lt;strong&gt;shipment&lt;/strong&gt; is the container.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In other words, using containers we are adding a new element to be considered along the &lt;a href=&#34;https://en.wikipedia.org/wiki/Systems_development_life_cycle&#34;&gt;Software Development Life Cycle (SDLC)&lt;/a&gt; as a new additional piece of software (containers), and from Architectural point of view, those new pieces of software will be distributed.&lt;/p&gt;
&lt;p&gt;Said that, the purpose of this post is explain you how to embed &lt;strong&gt;Security along the Container-based SDLC (Secure-SDLC)&lt;/strong&gt; and how to &lt;strong&gt;DevOps&lt;/strong&gt; practices will help its adoption.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://holisticsecurity.io/assets/blog20200210/20200210-security-along-container-based-sdlc-v2.png&#34;&gt;&lt;img src=&#34;https://holisticsecurity.io/assets/blog20200210/20200210-security-along-container-based-sdlc-v2.png&#34; alt=&#34;&#34;&gt;&lt;/a&gt;&lt;br&gt;
&lt;em&gt;&lt;!-- raw HTML omitted --&gt;Security along the Container-based SDLC - Overview&lt;!-- raw HTML omitted --&gt;&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
