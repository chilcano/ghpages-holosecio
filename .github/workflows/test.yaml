---
name: Test

on:
  push:
    branches:
      - 'tests/**'

jobs:
  job1:
    runs-on: ubuntu-latest
    outputs:
      envar_commit_hash_short_out1: ${{ env.envar_commit_hash_short }}
      envar_commit_hash_short_out2: ${{ steps.step1.outputs.envar_commit_hash_short }}
      envar_commit_hash_short_out3: ${{ steps.step1.outputs.envar_commit_hash_short_out }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      # - name: Set up Node.js
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 16.x
      #     cache: 'npm'
      - name: Get variables
        id: step1
        run: |
          echo "##[set-output name=branch_name_old;]$(echo ${GITHUB_REF#refs/heads/} | tr '/' '-' )"
          echo "branch_name_new=$(echo ${GITHUB_REF#refs/heads/} | tr '/' '-' )" >> $GITHUB_OUTPUT
          echo "::set-output name=commit_hash_short::$(git rev-parse --short HEAD)"
          echo "::set-output name=commit_hash::$(git rev-parse HEAD)"
          echo "::set-output name=committer::${GITHUB_ACTOR}"
          ## this is the right way to set output vars: https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#environment-files
          echo "actor=${GITHUB_ACTOR}" >> $GITHUB_OUTPUT
          echo "envar_commit_hash_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "envar_commit_hash_short_out=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Print variables
        id: step2
        run: |
          echo "=> GH_REFS: ${GITHUB_REF#refs/heads/}"
          echo "=> COMMITTER: ${{ steps.step1.outputs.committer }}"
          echo "=> BRANCH_NAME.old: ${{ steps.step1.outputs.branch_name_old }}"
          echo "=> BRANCH_NAME.new: ${{ steps.step1.outputs.branch_name_new }}"
          echo "=> COMMIT_HASH: ${{ steps.step1.outputs.commit_hash }}"
          echo "=> COMMIT_HASH_SHORT: ${{ steps.step1.outputs.commit_hash_short }}"
          echo "=> ACTOR: ${{ steps.step1.outputs.actor }}"
          echo "=> envar_commit_hash_short: ${{ env.envar_commit_hash_short }}"
          echo "=> envar_commit_hash_short_out: ${{ steps.step1.outputs.envar_commit_hash_short_out }}"

      - name: List home
        run: |
          pwd
          ls -la 

  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - name: Print variables from separate job
        run: |
          echo "=> GH_REFS: ${GITHUB_REF#refs/heads/}"
          echo "=> COMMITTER: ${{ steps.step1.outputs.committer }}"
          echo "=> BRANCH_NAME.old: ${{ steps.step1.outputs.branch_name_old }}"
          echo "=> BRANCH_NAME.new: ${{ steps.step1.outputs.branch_name_new }}"
          echo "=> COMMIT_HASH: ${{ steps.step1.outputs.commit_hash }}"
          echo "=> COMMIT_HASH_SHORT: ${{ steps.step1.outputs.commit_hash_short }}"
          echo "=> ACTOR: ${{ steps.step1.outputs.actor }}"
          echo "=> envar_commit_hash_short: ${{ env.envar_commit_hash_short }}"
          echo "=> envar_commit_hash_short_out1: ${{ needs.job1.outputs.envar_commit_hash_short_out1 }}"
          echo "=> envar_commit_hash_short_out2: ${{ needs.job1.outputs.envar_commit_hash_short_out2 }}"
          echo "=> envar_commit_hash_short_out3: ${{ needs.job1.outputs.envar_commit_hash_short_out3 }}"

      - name: List home
        run: |
          pwd
          ls -la 